{"version":3,"file":"static/js/726.9355289e.chunk.js","mappings":"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","sources":["components/Dialogs/DialogsItem.js","components/Dialogs/DialogsMessage.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","components/Dialogs/Dialogs.js","components/UI/MyTextarea.js"],"sourcesContent":["import {NavLink} from \"react-router-dom\";\r\n\r\nexport default function DialogsItem(props) {\r\n\treturn (\r\n\t\t<NavLink to={`/dialogs/${props.id}`} className=\"flex items-center gap-3 cursor-pointer rounded-2xl p-3 hover:bg-light-blue active:bg-light-blue/75 transition-colors\">\r\n\t\t\t<div className=\"rounded-full w-[30px] h-[30px] overflow-hidden\">\r\n\t\t\t\t<img className=\"w-full h-full object-cover\" src={props.avatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t\t<p>{props.name}</p>\r\n\t\t</NavLink>\r\n\t)\r\n}","export default function DialogsMessage(props) {\r\n\treturn (\r\n\t\t<div>{props.message}</div>\r\n\t)\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n\r\n\t\t\treturn <Component {...this.props} />;\r\n\t\t}\r\n\t}\r\n\r\n\tconst ConnectAuthRedirectComponent = connect (mapStateToPropsForRedirect) (\r\n\t\tRedirectComponent\r\n\t);\r\n\r\n\treturn ConnectAuthRedirectComponent\r\n};\r\n","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n\tdialogsPage: state.dialogsPage,\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tsendMessage: (newMessageBody) => {\r\n\t\tdispatch(sendMessageCreator(newMessageBody))\r\n\t}\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)","import DialogsItem from \"./DialogsItem\";\r\nimport DialogsMessage from \"./DialogsMessage\";\r\nimport MyTextarea from \"../UI/MyTextarea\";\r\nimport MyButton from \"../UI/MyButton\";\r\nimport {AiOutlineSend} from \"react-icons/ai\";\r\nimport {Field, Form, Formik} from \"formik\";\r\n\r\nexport default function Dialogs(props) {\r\n\tconst state = props.dialogsPage;\r\n\r\n\treturn (\r\n\t\t<div className=\"dialogs h-[80vh] grid grid-cols-[4fr_10fr] bg-black rounded-2xl\">\r\n\t\t\t<div className=\"flex flex-col gap-2 p-5 border-r-[3px] border-dark-blue\">\r\n\t\t\t\t{state.dialogs.map(user => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<DialogsItem\r\n\t\t\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\t\t\tid={user.id}\r\n\t\t\t\t\t\t\tname={user.name}\r\n\t\t\t\t\t\t\tavatar={user.avatar}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"messages flex flex-col justify-end\">\r\n\t\t\t\t<div className=\"p-10\">\r\n\t\t\t\t\t{state.messages.map((message, idx) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<DialogsMessage key={idx} message={message.message}/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{newMessageBody: \"\"}}\r\n\t        onSubmit={(values, { resetForm }) => {\r\n\t\t        props.sendMessage(values.newMessageBody)\r\n\t\t        resetForm();\r\n\t        }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({ values, handleSubmit }) => (\r\n\t\t\t\t\t\t<Form className=\"relative p-2\">\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tname=\"newMessageBody\"\r\n\t\t\t\t\t\t\t\tcomponent={MyTextarea}\r\n\t\t\t\t\t\t\t\tclassName=\"rounded-b-none bg-black pr-20\"\r\n\t\t\t\t\t\t\t\tvalue={values.newMessageBody}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<MyButton className=\"absolute bottom-4 right-4\">\r\n\t\t\t\t\t\t\t\t<AiOutlineSend/>\r\n\t\t\t\t\t\t\t</MyButton>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import TextareaAutosize from \"react-textarea-autosize\";\r\nimport {ErrorMessage} from \"formik\";\r\n\r\nexport default function MyTextarea(\r\n\t{\r\n\t\tfield,\r\n\t\tplaceholder,\r\n\t\tclassName,\r\n\t\tvalid,\r\n\t\t...props\r\n\t}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TextareaAutosize\r\n\t\t\t\t{...field}\r\n\t\t\t\t{...props}\r\n\t\t\t\tminRows={3}\r\n\t\t\t\tmaxRows={20}\r\n\t\t\t\tclassName={`resize-none block p-2.5 pb-3.5 w-full text-sm text-white bg-dark-blue rounded-lg border border-gray-700 transition-colors focus:ring-blue-500 focus:border-blue-200 outline-0 ${props.className}`}\r\n\t\t\t\tplaceholder=\"Write your thoughts here...\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage className=\"mt-1 text-sm text-red-500\" name={field.name} component=\"div\" />\r\n\t\t</>\r\n\t)\r\n}"],"names":["DialogsItem","props","_jsxs","NavLink","to","concat","id","className","children","_jsx","src","avatar","alt","name","DialogsMessage","message","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","dispatch","sendMessage","newMessageBody","sendMessageCreator","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React","dialogs","map","user","messages","idx","Formik","initialValues","onSubmit","values","_ref","resetForm","_ref2","handleSubmit","Form","Field","component","MyTextarea","MyButton","AiOutlineSend","field","placeholder","valid","_objectWithoutProperties","_excluded","_Fragment","TextareaAutosize","minRows","maxRows","ErrorMessage"],"sourceRoot":""}