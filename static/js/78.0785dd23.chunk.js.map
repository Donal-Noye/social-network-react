{"version":3,"file":"static/js/78.0785dd23.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/PostsItem.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/UI/MyTextarea.js"],"sourcesContent":["import {HiPencil} from \"react-icons/hi\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect((prevProps) => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status]);\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false)\r\n\r\n\t\tprops.updateStatus(status);\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div className=\"flex items-center gap-2\">\r\n\t\t\t\t\t<p className=\"text-sm text-gray-400\">{props.status || \"-----\"}</p>\r\n\t\t\t\t\t<div onClick={activateEditMode}\r\n\t\t\t\t\t     className=\"p-1.5 -m-1.5 cursor-pointer rounded-full hover:bg-light-blue/50 transition-colors\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<HiPencil size={18}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={\"block px-2 py-1 text-sm text-white bg-dark-blue rounded-lg border border-gray-700 transition-colors focus:ring-blue-500 focus:border-blue-200 outline-0\"}\r\n\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\tvalue={status}/>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatus","import defaultAvatar from \"../../../img/defaultAvatar.jpeg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nexport default function ProfileInfo({ profile, status, updateStatus }) {\r\n\treturn (\r\n\t\t<div className=\"pb-10 mb-4 bg-black rounded-2xl overflow-hidden\">\r\n\t\t\t<div className=\"h-[200px] overflow-hidden\">\r\n\t\t\t\t<img className=\"w-full h-full object-cover\" src={require('../../../img/wallpaper_cliff_1920x1080.jpg')} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"ml-16 -mt-16\">\r\n\t\t\t\t<div className=\"rounded-full w-[120px] h-[120px] overflow-hidden mb-3\">\r\n\t\t\t\t\t<img className=\"w-full h-full object-cover\"\r\n\t\t\t\t\t     src={profile.photos.large ? profile.photos.large : defaultAvatar} alt=\"\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"text-2xl mb-1\">{profile.fullName}</h2>\r\n\t\t\t\t<ProfileStatus status={status} updateStatus={updateStatus}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import defaultAvatar from \"../../../img/defaultAvatar.jpeg\"\r\n\r\nexport default function PostsItem(props) {\r\n\treturn (\r\n\t\t<div className=\"flex items-center gap-3 border-b-2 border-dark-blue p-5\">\r\n\t\t\t<div className=\"rounded-full w-[40px] h-[40px] overflow-hidden\">\r\n\t\t\t\t<img className=\"w-full h-full object-cover\" src={defaultAvatar} alt=\"\"/>\r\n\t\t\t</div>\r\n\t\t\t<p>{props.text}</p>\r\n\t\t</div>\r\n\t)\r\n}","import PostsItem from \"./PostsItem\";\r\nimport MyButton from \"../../UI/MyButton\";\r\nimport MyTextarea from \"../../UI/MyTextarea\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {memo} from \"react\";\r\n\r\nconst MyPosts = memo(props => {\r\n\tconst validationSchema = Yup.object().shape({\r\n\t\tnewPostText: Yup.string()\r\n\t\t\t.min(2, 'Must be longer than 2 characters !')\r\n\t\t\t.max(100, 'Must be shorter than 100 characters !')\r\n\t\t\t.required('Required !')\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"p-10 pt-7 bg-black rounded-2xl overflow-hidden\">\r\n\t\t\t<h3 className=\"text-xl mb-4\">My Posts</h3>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{newPostText: \"\"}}\r\n\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\tonSubmit={(values, { resetForm }) => {\r\n\t\t\t\t\tprops.addPost(values.newPostText)\r\n\t\t\t\t\tresetForm();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{() => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\tcomponent={MyTextarea}\r\n\t\t\t\t\t\t\tname={\"newPostText\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MyButton className=\"mt-4\">Publish post</MyButton>\r\n\t\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t\t<div className=\"grid gap-4 mt-5\">\r\n\t\t\t\t{[...props.posts].reverse().map((post, idx) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<PostsItem text={post.text} key={idx} />\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => ({\r\n\t\tposts: state.profilePage.posts,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\taddPost: (newPostText) => {\r\n\t\tdispatch(addPostActionCreator(newPostText))\r\n\t},\r\n})\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nexport default function Profile(props) {\r\n\treturn (\r\n\t\t<div className=\"profile\">\r\n\t\t\t<ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}","import {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {useLocation, useNavigate, useParams,} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nfunction withRouter(Component) {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t\tlet location = useLocation();\r\n\t\tlet navigate = useNavigate();\r\n\t\tlet params = useParams();\r\n\t\treturn (\r\n\t\t\t<Component\r\n\t\t\t\t{...props}\r\n\t\t\t\trouter={{location, navigate, params}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\treturn ComponentWithRouterProp;\r\n}\r\n\r\nfunction ProfileContainer(props) {\r\n\tlet navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\tlet userId = props.router.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = props.authorizedUserId;\r\n\r\n\t\t\tif (!userId) {\r\n\t\t\t\tnavigate('/login')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprops.getUserProfile(userId)\r\n\t\tprops.getStatus(userId)\r\n\t})\r\n\r\n\treturn <>\r\n\t\t{!props.profile\r\n\t\t\t? <Preloader/>\r\n\t\t\t: <Profile {...props}\r\n\t\t\t           profile={props.profile}\r\n\t\t\t           status={props.status}\r\n\t\t\t           updateStatus={props.updateStatus}/>}\r\n\t</>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tstatus: state.profilePage.status\r\n});\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n\twithRouter\r\n)(ProfileContainer)","import TextareaAutosize from \"react-textarea-autosize\";\r\nimport {ErrorMessage} from \"formik\";\r\n\r\nexport default function MyTextarea(\r\n\t{\r\n\t\tfield,\r\n\t\tplaceholder,\r\n\t\tclassName,\r\n\t\tvalid,\r\n\t\t...props\r\n\t}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TextareaAutosize\r\n\t\t\t\t{...field}\r\n\t\t\t\t{...props}\r\n\t\t\t\tminRows={3}\r\n\t\t\t\tmaxRows={20}\r\n\t\t\t\tclassName={`resize-none block p-2.5 pb-3.5 w-full text-sm text-white bg-dark-blue rounded-lg border border-gray-700 transition-colors focus:ring-blue-500 focus:border-blue-200 outline-0 ${props.className}`}\r\n\t\t\t\tplaceholder=\"Write your thoughts here...\"\r\n\t\t\t/>\r\n\t\t\t<ErrorMessage className=\"mt-1 text-sm text-red-500\" name={field.name} component=\"div\" />\r\n\t\t</>\r\n\t)\r\n}"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","prevProps","_jsxs","_Fragment","children","className","_jsx","onClick","HiPencil","size","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","src","require","alt","photos","large","defaultAvatar","fullName","ProfileStatus","PostsItem","text","memo","validationSchema","Yup","shape","newPostText","min","max","required","Formik","initialValues","onSubmit","values","resetForm","addPost","Form","Field","component","MyTextarea","name","MyButton","_toConsumableArray","posts","reverse","map","post","idx","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","Profile","MyPostsContainer","compose","authorizedUserId","auth","userId","getUserProfile","getStatus","Component","location","useLocation","navigate","useNavigate","params","useParams","_objectSpread","router","Preloader","field","placeholder","valid","_objectWithoutProperties","_excluded","TextareaAutosize","minRows","maxRows","concat","ErrorMessage"],"sourceRoot":""}